name: Build Desktop Binaries and Release
run-name: Build Windows, Macintosh, Linux executables
on: [push]
# on:
#   push:
#     branches:
#       - main

jobs:
  upload-release:
    runs-on: ubuntu-latest
    # needs: [build-macos, build-linux, build-windows]
    needs: [build-linux, build-windows, build-macos]

    steps:
      - uses: actions/checkout@v1
      - name: create release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: latest
          allowUpdates: true
          bodyFile: "CHANGELOG.md"
      - name: download artifacts
        uses: actions/download-artifact@v1
        with:
          name: uploads
      - name: upload macos
        id: upload-macos
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./uploads/macos_universal.zip
          asset_name: macos_universal.zip
          asset_content_type: application/zip
      - name: Upload Linux
        id: upload-linux
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./uploads/linux_x86_64.zip
          asset_name: linux_x86_64.zip
          asset_content_type: application/zip
      - name: Upload Windows
        id: upload-windows
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./uploads/windows_x86_64.zip
          asset_name: windows_x86_64.zip
          asset_content_type: application/zip

  build-macos:
    runs-on: macos-14 # 14 is an M1 host: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Info printout
        run: |
          echo "The job was automatically triggered by a ${{ github.event_name }} event."
          echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Import flutter action package
        uses: subosito/flutter-action@v2.12.0
        with:
          channel: "stable"
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Configure macOS desktop environment
        run: flutter create --platforms=macos .
      - name: Initial cleaning
        run: flutter clean && flutter pub get
      - name: App renaming
        run: |
          flutter pub global activate rename
          flutter pub global run rename setAppName --targets macos --value "R Collection"
      - name: Rebuild icons
        run: flutter pub run flutter_launcher_icons
      - name: flutter doctor output
        run: flutter doctor
      - name: Build macOS version
        run: flutter build macos
      - name: Post build zipping
        run: |
          mv build/macos/Build/Products/Release/*.app .
          zip -r macos_universal *.app
      - name: Upload macos artifact
        uses: actions/upload-artifact@v1
        with:
          name: uploads
          path: macos_universal.zip

  build-linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Info printout
        run: |
          echo "The job was automatically triggered by a ${{ github.event_name }} event."
          echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Import flutter action package
        uses: subosito/flutter-action@v2.12.0
        with:
          channel: "stable"
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Configure Linux desktop environment
        run: flutter create --platforms=linux .
      - name: Initial cleaning
        run: flutter clean && flutter pub get
      - name: App renaming
        run: |
          flutter pub global activate rename
          flutter pub global run rename setAppName --targets linux --value "R_Collection"
      - name: Rebuild icons
        run: flutter pub run flutter_launcher_icons
      - name: Install Linux build dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
          sudo apt-get install -y libunwind-dev
          sudo apt-get install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio
      - name: flutter doctor output
        run: flutter doctor
      - name: Build Linux version
        run: flutter build linux
      - name: Post build zipping
        run: |
          mv build/linux/x64/release/bundle linux
          zip -r linux_x86_64 linux
      - name: Upload linux artifact
        uses: actions/upload-artifact@v1
        with:
          name: uploads
          path: linux_x86_64.zip

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Info printout
        run: |
          echo "The job was automatically triggered by a ${{ github.event_name }} event."
          echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Import flutter action package
        uses: subosito/flutter-action@v2.12.0
        with:
          channel: "stable"
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Configure Windows desktop environment
        run: flutter create --platforms=windows .
      - name: Initial cleaning
        run: flutter clean && flutter pub get
      - name: App renaming
        run: |
          flutter pub global activate rename
          flutter pub global run rename setAppName --targets windows --value "R Collection"
      - name: Rebuild icons
        run: flutter pub run flutter_launcher_icons
      - name: flutter doctor output
        run: flutter doctor
      - name: Build Windows version
        run: flutter build windows
      - name: Post build zipping
        run: |
          powershell Compress-Archive build/windows/x64/runner/Release windows_x86_64.zip
      - name: Upload windows artifact
        uses: actions/upload-artifact@v1
        with:
          name: uploads
          path: windows_x86_64.zip
